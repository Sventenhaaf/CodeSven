TA Material:
- error handling in the stores - is this a good way?

Quickfix:
- Show errors when login fails
- working functions in seed data
- Indicate that snippet is saved properly
- fix browse/create button name
- Keep code in hidden field if it is in Codemirror field

Todo:
- User signup
- More CRUD functionality to snippets ( basically, apply fork button and add delete functionality)
- Security - before_action and authenticity token

Styling / Later:
- Smooth User login / snippet save form appear
- Clear button clears result field
- Make sure save button becomes fork button
- Put author name instead of author id
- Search options
- Nicer save UX
- Toggle button browse create - always have the right name for te button
- Navbar styling and welcome text
- Run code at cmd-Enter
- Likes and tags
- HTML and CSS
- Recognize infinite loops and act on them
(Florante)
- button with "your functions"
- check out robohash

Heroku
- Seed dump gem

After class:
- Redo the interpreter - getting all errors to work etc



- Style the Create page (with codemirror)
- Add likes and tags
- Toggle to CodeZen - and code with great background images - https://unsplash.com/
- Make the interpreter awesome - http://www.codeproject.com/Articles/345888/How-to-write-a-simple-interpreter-in-JavaScript
  - https://github.com/mozilla/narcissus/




See slick for cool sliders between code http://kenwheeler.github.io/slick/

Keep in mind CodeMirror for code editing

Played around with prettify, might need to redo this:
- download prettify js and save locally in javascripts
- require in application.js
- download prettify css and save locally in styles
- require in application.css

Save Github:
echo "# CodeSven" >> README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/Sventenhaaf/CodeSven.git
git push -u origin master
